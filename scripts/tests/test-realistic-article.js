/**
 * üß™ Test avec article r√©aliste pour Cortex
 */

import { cortexDataManager } from './Cortex/dataManager.js';
import { ArticleRepository } from './database/index.js';

async function testWithRealisticArticle() {
    try {
        console.log('üß™ Test avec article r√©aliste...\n');

        // Article avec contenu suffisant
        const realisticArticle = {
            url: 'https://test-realistic-' + Date.now() + '.example.com',
            title: 'Guide complet pour optimiser les performances des applications web modernes',
            content: `
            L'optimisation des performances des applications web est un sujet crucial dans le d√©veloppement moderne.
            Avec l'augmentation constante du trafic et des attentes des utilisateurs, les d√©veloppeurs doivent 
            mettre en place des strat√©gies efficaces pour garantir une exp√©rience utilisateur optimale.
            
            Les techniques d'optimisation incluent la minification des ressources, la mise en cache intelligente,
            l'optimisation des images, et l'utilisation de CDN pour distribuer le contenu g√©ographiquement.
            
            Il est √©galement important de surveiller les Core Web Vitals et d'utiliser des outils comme Lighthouse
            pour √©valuer les performances. La compression gzip, le lazy loading, et la r√©duction des requ√™tes HTTP
            sont autant de moyens d'am√©liorer significativement les temps de chargement.
            
            En conclusion, une approche m√©thodique et l'utilisation d'outils appropri√©s permettent d'obtenir
            des performances optimales pour les applications web modernes.`,
            author: 'Expert Web Performance',
            date: new Date().toISOString(),
            extractedAt: new Date().toISOString()
        };

        console.log('üìù Article √† sauvegarder:');
        console.log(`   Titre: ${realisticArticle.title}`);
        console.log(`   URL: ${realisticArticle.url}`);
        console.log(`   Contenu: ${realisticArticle.content.length} caract√®res`);
        console.log('');

        // Test de sauvegarde
        const saveResult = await cortexDataManager.saveProcessedArticle(realisticArticle);
        console.log(`${saveResult ? '‚úÖ' : '‚ùå'} Sauvegarde: ${saveResult ? 'SUCC√àS' : '√âCHEC'}`);

        if (saveResult) {
            // V√©rifier en base
            const articleRepo = new ArticleRepository();
            const savedArticle = await articleRepo.findOne({ url: realisticArticle.url });

            if (savedArticle) {
                console.log('‚úÖ Article retrouv√© dans la base !');
                console.log(`   ID: ${savedArticle.id}`);
                console.log(`   Cr√©√©: ${savedArticle.created_at}`);

                // Compter le total maintenant
                const totalCount = await articleRepo.count();
                console.log(`üìä Total articles en base maintenant: ${totalCount}`);
            } else {
                console.log('‚ùå Article NON retrouv√© dans la base');
            }
        }

        // Stats
        const stats = cortexDataManager.getStats();
        console.log('\nüìä Statistiques DataManager:');
        console.log(`   Articles ins√©r√©s: ${stats.articlesInserted}`);
        console.log(`   √âchecs validation: ${stats.validationFailures}`);
        console.log(`   Doublons ignor√©s: ${stats.duplicatesSkipped}`);

    } catch (error) {
        console.error('‚ùå Erreur:', error.message);
    }
}

testWithRealisticArticle();
